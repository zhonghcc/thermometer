= jQuery Thermometer Plugin

http://coryschires-blog-post-images.s3.amazonaws.com/thermometer/thermometer.png

Helps turns any list into a nice looking progress thermometer



== How to make it work.
First, include both <tt>jquery</tt> and <tt>jquery.thermometer.js</tt> in your <tt>head</tt> element:

  <script src="path/to/jquery.js" type="text/javascript"></script>
  <script src="path/to/jquery.thermometer.js" type="text/javascript"></script>

Next, invoke the plugin:

  $(document).ready(function() {
    $('ul').thermometer();
  });


Finally, add a list to your page:

  <ul>
    <li>Personal Info</li>
    <li>Payment Info</li>
    <li class="active">Billing Address</li>
    <li>Shipping Address</li>
    <li>Confirmation</li>
  </ul>

It can be an ordered or unordered list and can have any number of list items. Notice that the current step should have a class of <tt>active</tt>. If you'd rather name you active class something else (e.g. current), you can do so using a configuration option (see below).



== Adding the necessary CSS.

Finally, you're going to need to write some CSS and create a corresponding thermometer sprite.  The plugin will create the following markup:

  <div class="thermometer_wrapper">
    <h4 class="thermometer_current_status">Billing Address</h4>
    <ul class="thermometer">
      <div class="progress_bar progress_60"></div>
      <li>Personal Info</li>
      <li>Payment Info</li>
      <li class="active">Billing Address</li>
      <li>Shipping Address</li>
      <li>Confirmation</li>
    </ul>
  </div>

As you can see, we've added a little bit of markup to the page. First, <tt>thermometer_current_status</tt> contains our title. By default, it will use the text from the currently active list item. You can override this behavior using a configuration option (see below).

Next, the plugin dynamically sets the width of your thermometer. So you'll need to apply some styles.
This means your CSS should look something like:

  .progress_bar_wrapper {
      padding: 5px 7px;
      border-radius: 50px;
      border: 1px solid #afafaf;
      box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.4);
      background: url('faint_lines.png') repeat-x, -webkit-linear-gradient(top, #fafafa 0%, #d1d3d4 88%, #d5d5d5 94%, #d5d5d5 100%);
  }
  .thermometer_wrapper ul.thermometer .progress_bar {
      height: 19px;
      border-radius: 50px;
      border: 1px solid #0b729a;
      box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.5);
      background: url('lines.png') repeat-x, linear-gradient(top, rgba(86,212,86,1) 0%,rgba(86,212,86,1) 45%,rgba(86,212,86,1) 45%,rgba(86,212,86,1) 45%,rgba(25,130,26,1) 100%);
  }

<i>Credit {Rob Walsh}[http://www.robwalshonline.com/] for the nice looking thermometer styles.</i>


== Configuration options.
You can change the name of the class for the currently active state:
  $('ul').thermometer({
    active_class: 'current'  // defaults to 'active'
  });

You can also specify the markup to be used when creating the thermometer title:
  $('ul').thermometer({
    // Defaults to the text of the currently active list item. The interpolated
    // symbol {{active}} will be dynamically replaced with the text from the
    // currently active list item.
    title_markup: '<em>Current Status:</em> {{active}}'
  });

Finally, you can set the thermometer to animate on page load:
  $('ul').thermometer({
    animate: true // defaults to false
  });


== Public Methods.
We have only one public method <tt>update_active_state</tt>, which you can use to re-draw the thermometer without having to reload the entire page:

  $('ul').thermometer('update_active_state');

This can be useful for AJAX-y stuff (e.g. transitioning between steps of on a multistep form).



== Demo.
View the {live demo}[http://coryschires.github.com/thermometer/].



== Having problems?
Please create an issue. If you're feeling especially nice, attach a pull request.



== Todo.
* Unit tests
